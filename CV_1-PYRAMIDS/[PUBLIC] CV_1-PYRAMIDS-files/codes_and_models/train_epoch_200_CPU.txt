Το αρχείο F:/OneDrive - University of Patras/CEID/9ο Εξάμηνο/ΘΕΜΑΤΑ ΟΡΑΣΗΣ ΥΠΟΛΟΓΙΣΤΩΝ/ΕΡΓΑΣΙΕΣ/COMPUTER-VISION-LAB/CV_1-PYRAMIDS/[PUBLIC] CV_1-PYRAMIDS-files/codes_and_models/train_epoch_200_CPU.pth περιέχει τα παρακάτω κλειδιά:
 - layer0.0.weight
 - layer0.1.weight
 - layer0.1.bias
 - layer0.1.running_mean
 - layer0.1.running_var
 - layer0.1.num_batches_tracked
 - layer0.3.weight
 - layer0.4.weight
 - layer0.4.bias
 - layer0.4.running_mean
 - layer0.4.running_var
 - layer0.4.num_batches_tracked
 - layer0.6.weight
 - layer0.7.weight
 - layer0.7.bias
 - layer0.7.running_mean
 - layer0.7.running_var
 - layer0.7.num_batches_tracked
 - layer1.0.conv1.weight
 - layer1.0.bn1.weight
 - layer1.0.bn1.bias
 - layer1.0.bn1.running_mean
 - layer1.0.bn1.running_var
 - layer1.0.bn1.num_batches_tracked
 - layer1.0.conv2.weight
 - layer1.0.bn2.weight
 - layer1.0.bn2.bias
 - layer1.0.bn2.running_mean
 - layer1.0.bn2.running_var
 - layer1.0.bn2.num_batches_tracked
 - layer1.0.conv3.weight
 - layer1.0.bn3.weight
 - layer1.0.bn3.bias
 - layer1.0.bn3.running_mean
 - layer1.0.bn3.running_var
 - layer1.0.bn3.num_batches_tracked
 - layer1.0.downsample.0.weight
 - layer1.0.downsample.1.weight
 - layer1.0.downsample.1.bias
 - layer1.0.downsample.1.running_mean
 - layer1.0.downsample.1.running_var
 - layer1.0.downsample.1.num_batches_tracked
 - layer1.1.conv1.weight
 - layer1.1.bn1.weight
 - layer1.1.bn1.bias
 - layer1.1.bn1.running_mean
 - layer1.1.bn1.running_var
 - layer1.1.bn1.num_batches_tracked
 - layer1.1.conv2.weight
 - layer1.1.bn2.weight
 - layer1.1.bn2.bias
 - layer1.1.bn2.running_mean
 - layer1.1.bn2.running_var
 - layer1.1.bn2.num_batches_tracked
 - layer1.1.conv3.weight
 - layer1.1.bn3.weight
 - layer1.1.bn3.bias
 - layer1.1.bn3.running_mean
 - layer1.1.bn3.running_var
 - layer1.1.bn3.num_batches_tracked
 - layer1.2.conv1.weight
 - layer1.2.bn1.weight
 - layer1.2.bn1.bias
 - layer1.2.bn1.running_mean
 - layer1.2.bn1.running_var
 - layer1.2.bn1.num_batches_tracked
 - layer1.2.conv2.weight
 - layer1.2.bn2.weight
 - layer1.2.bn2.bias
 - layer1.2.bn2.running_mean
 - layer1.2.bn2.running_var
 - layer1.2.bn2.num_batches_tracked
 - layer1.2.conv3.weight
 - layer1.2.bn3.weight
 - layer1.2.bn3.bias
 - layer1.2.bn3.running_mean
 - layer1.2.bn3.running_var
 - layer1.2.bn3.num_batches_tracked
 - layer2.0.conv1.weight
 - layer2.0.bn1.weight
 - layer2.0.bn1.bias
 - layer2.0.bn1.running_mean
 - layer2.0.bn1.running_var
 - layer2.0.bn1.num_batches_tracked
 - layer2.0.conv2.weight
 - layer2.0.bn2.weight
 - layer2.0.bn2.bias
 - layer2.0.bn2.running_mean
 - layer2.0.bn2.running_var
 - layer2.0.bn2.num_batches_tracked
 - layer2.0.conv3.weight
 - layer2.0.bn3.weight
 - layer2.0.bn3.bias
 - layer2.0.bn3.running_mean
 - layer2.0.bn3.running_var
 - layer2.0.bn3.num_batches_tracked
 - layer2.0.downsample.0.weight
 - layer2.0.downsample.1.weight
 - layer2.0.downsample.1.bias
 - layer2.0.downsample.1.running_mean
 - layer2.0.downsample.1.running_var
 - layer2.0.downsample.1.num_batches_tracked
 - layer2.1.conv1.weight
 - layer2.1.bn1.weight
 - layer2.1.bn1.bias
 - layer2.1.bn1.running_mean
 - layer2.1.bn1.running_var
 - layer2.1.bn1.num_batches_tracked
 - layer2.1.conv2.weight
 - layer2.1.bn2.weight
 - layer2.1.bn2.bias
 - layer2.1.bn2.running_mean
 - layer2.1.bn2.running_var
 - layer2.1.bn2.num_batches_tracked
 - layer2.1.conv3.weight
 - layer2.1.bn3.weight
 - layer2.1.bn3.bias
 - layer2.1.bn3.running_mean
 - layer2.1.bn3.running_var
 - layer2.1.bn3.num_batches_tracked
 - layer2.2.conv1.weight
 - layer2.2.bn1.weight
 - layer2.2.bn1.bias
 - layer2.2.bn1.running_mean
 - layer2.2.bn1.running_var
 - layer2.2.bn1.num_batches_tracked
 - layer2.2.conv2.weight
 - layer2.2.bn2.weight
 - layer2.2.bn2.bias
 - layer2.2.bn2.running_mean
 - layer2.2.bn2.running_var
 - layer2.2.bn2.num_batches_tracked
 - layer2.2.conv3.weight
 - layer2.2.bn3.weight
 - layer2.2.bn3.bias
 - layer2.2.bn3.running_mean
 - layer2.2.bn3.running_var
 - layer2.2.bn3.num_batches_tracked
 - layer2.3.conv1.weight
 - layer2.3.bn1.weight
 - layer2.3.bn1.bias
 - layer2.3.bn1.running_mean
 - layer2.3.bn1.running_var
 - layer2.3.bn1.num_batches_tracked
 - layer2.3.conv2.weight
 - layer2.3.bn2.weight
 - layer2.3.bn2.bias
 - layer2.3.bn2.running_mean
 - layer2.3.bn2.running_var
 - layer2.3.bn2.num_batches_tracked
 - layer2.3.conv3.weight
 - layer2.3.bn3.weight
 - layer2.3.bn3.bias
 - layer2.3.bn3.running_mean
 - layer2.3.bn3.running_var
 - layer2.3.bn3.num_batches_tracked
 - layer3.0.conv1.weight
 - layer3.0.bn1.weight
 - layer3.0.bn1.bias
 - layer3.0.bn1.running_mean
 - layer3.0.bn1.running_var
 - layer3.0.bn1.num_batches_tracked
 - layer3.0.conv2.weight
 - layer3.0.bn2.weight
 - layer3.0.bn2.bias
 - layer3.0.bn2.running_mean
 - layer3.0.bn2.running_var
 - layer3.0.bn2.num_batches_tracked
 - layer3.0.conv3.weight
 - layer3.0.bn3.weight
 - layer3.0.bn3.bias
 - layer3.0.bn3.running_mean
 - layer3.0.bn3.running_var
 - layer3.0.bn3.num_batches_tracked
 - layer3.0.downsample.0.weight
 - layer3.0.downsample.1.weight
 - layer3.0.downsample.1.bias
 - layer3.0.downsample.1.running_mean
 - layer3.0.downsample.1.running_var
 - layer3.0.downsample.1.num_batches_tracked
 - layer3.1.conv1.weight
 - layer3.1.bn1.weight
 - layer3.1.bn1.bias
 - layer3.1.bn1.running_mean
 - layer3.1.bn1.running_var
 - layer3.1.bn1.num_batches_tracked
 - layer3.1.conv2.weight
 - layer3.1.bn2.weight
 - layer3.1.bn2.bias
 - layer3.1.bn2.running_mean
 - layer3.1.bn2.running_var
 - layer3.1.bn2.num_batches_tracked
 - layer3.1.conv3.weight
 - layer3.1.bn3.weight
 - layer3.1.bn3.bias
 - layer3.1.bn3.running_mean
 - layer3.1.bn3.running_var
 - layer3.1.bn3.num_batches_tracked
 - layer3.2.conv1.weight
 - layer3.2.bn1.weight
 - layer3.2.bn1.bias
 - layer3.2.bn1.running_mean
 - layer3.2.bn1.running_var
 - layer3.2.bn1.num_batches_tracked
 - layer3.2.conv2.weight
 - layer3.2.bn2.weight
 - layer3.2.bn2.bias
 - layer3.2.bn2.running_mean
 - layer3.2.bn2.running_var
 - layer3.2.bn2.num_batches_tracked
 - layer3.2.conv3.weight
 - layer3.2.bn3.weight
 - layer3.2.bn3.bias
 - layer3.2.bn3.running_mean
 - layer3.2.bn3.running_var
 - layer3.2.bn3.num_batches_tracked
 - layer3.3.conv1.weight
 - layer3.3.bn1.weight
 - layer3.3.bn1.bias
 - layer3.3.bn1.running_mean
 - layer3.3.bn1.running_var
 - layer3.3.bn1.num_batches_tracked
 - layer3.3.conv2.weight
 - layer3.3.bn2.weight
 - layer3.3.bn2.bias
 - layer3.3.bn2.running_mean
 - layer3.3.bn2.running_var
 - layer3.3.bn2.num_batches_tracked
 - layer3.3.conv3.weight
 - layer3.3.bn3.weight
 - layer3.3.bn3.bias
 - layer3.3.bn3.running_mean
 - layer3.3.bn3.running_var
 - layer3.3.bn3.num_batches_tracked
 - layer3.4.conv1.weight
 - layer3.4.bn1.weight
 - layer3.4.bn1.bias
 - layer3.4.bn1.running_mean
 - layer3.4.bn1.running_var
 - layer3.4.bn1.num_batches_tracked
 - layer3.4.conv2.weight
 - layer3.4.bn2.weight
 - layer3.4.bn2.bias
 - layer3.4.bn2.running_mean
 - layer3.4.bn2.running_var
 - layer3.4.bn2.num_batches_tracked
 - layer3.4.conv3.weight
 - layer3.4.bn3.weight
 - layer3.4.bn3.bias
 - layer3.4.bn3.running_mean
 - layer3.4.bn3.running_var
 - layer3.4.bn3.num_batches_tracked
 - layer3.5.conv1.weight
 - layer3.5.bn1.weight
 - layer3.5.bn1.bias
 - layer3.5.bn1.running_mean
 - layer3.5.bn1.running_var
 - layer3.5.bn1.num_batches_tracked
 - layer3.5.conv2.weight
 - layer3.5.bn2.weight
 - layer3.5.bn2.bias
 - layer3.5.bn2.running_mean
 - layer3.5.bn2.running_var
 - layer3.5.bn2.num_batches_tracked
 - layer3.5.conv3.weight
 - layer3.5.bn3.weight
 - layer3.5.bn3.bias
 - layer3.5.bn3.running_mean
 - layer3.5.bn3.running_var
 - layer3.5.bn3.num_batches_tracked
 - layer4.0.conv1.weight
 - layer4.0.bn1.weight
 - layer4.0.bn1.bias
 - layer4.0.bn1.running_mean
 - layer4.0.bn1.running_var
 - layer4.0.bn1.num_batches_tracked
 - layer4.0.conv2.weight
 - layer4.0.bn2.weight
 - layer4.0.bn2.bias
 - layer4.0.bn2.running_mean
 - layer4.0.bn2.running_var
 - layer4.0.bn2.num_batches_tracked
 - layer4.0.conv3.weight
 - layer4.0.bn3.weight
 - layer4.0.bn3.bias
 - layer4.0.bn3.running_mean
 - layer4.0.bn3.running_var
 - layer4.0.bn3.num_batches_tracked
 - layer4.0.downsample.0.weight
 - layer4.0.downsample.1.weight
 - layer4.0.downsample.1.bias
 - layer4.0.downsample.1.running_mean
 - layer4.0.downsample.1.running_var
 - layer4.0.downsample.1.num_batches_tracked
 - layer4.1.conv1.weight
 - layer4.1.bn1.weight
 - layer4.1.bn1.bias
 - layer4.1.bn1.running_mean
 - layer4.1.bn1.running_var
 - layer4.1.bn1.num_batches_tracked
 - layer4.1.conv2.weight
 - layer4.1.bn2.weight
 - layer4.1.bn2.bias
 - layer4.1.bn2.running_mean
 - layer4.1.bn2.running_var
 - layer4.1.bn2.num_batches_tracked
 - layer4.1.conv3.weight
 - layer4.1.bn3.weight
 - layer4.1.bn3.bias
 - layer4.1.bn3.running_mean
 - layer4.1.bn3.running_var
 - layer4.1.bn3.num_batches_tracked
 - layer4.2.conv1.weight
 - layer4.2.bn1.weight
 - layer4.2.bn1.bias
 - layer4.2.bn1.running_mean
 - layer4.2.bn1.running_var
 - layer4.2.bn1.num_batches_tracked
 - layer4.2.conv2.weight
 - layer4.2.bn2.weight
 - layer4.2.bn2.bias
 - layer4.2.bn2.running_mean
 - layer4.2.bn2.running_var
 - layer4.2.bn2.num_batches_tracked
 - layer4.2.conv3.weight
 - layer4.2.bn3.weight
 - layer4.2.bn3.bias
 - layer4.2.bn3.running_mean
 - layer4.2.bn3.running_var
 - layer4.2.bn3.num_batches_tracked
 - ppm.features.0.1.weight
 - ppm.features.0.2.weight
 - ppm.features.0.2.bias
 - ppm.features.0.2.running_mean
 - ppm.features.0.2.running_var
 - ppm.features.0.2.num_batches_tracked
 - ppm.features.1.1.weight
 - ppm.features.1.2.weight
 - ppm.features.1.2.bias
 - ppm.features.1.2.running_mean
 - ppm.features.1.2.running_var
 - ppm.features.1.2.num_batches_tracked
 - ppm.features.2.1.weight
 - ppm.features.2.2.weight
 - ppm.features.2.2.bias
 - ppm.features.2.2.running_mean
 - ppm.features.2.2.running_var
 - ppm.features.2.2.num_batches_tracked
 - ppm.features.3.1.weight
 - ppm.features.3.2.weight
 - ppm.features.3.2.bias
 - ppm.features.3.2.running_mean
 - ppm.features.3.2.running_var
 - ppm.features.3.2.num_batches_tracked
 - cls.0.weight
 - cls.1.weight
 - cls.1.bias
 - cls.1.running_mean
 - cls.1.running_var
 - cls.1.num_batches_tracked
 - cls.4.weight
 - cls.4.bias
 - aux.0.weight
 - aux.1.weight
 - aux.1.bias
 - aux.1.running_mean
 - aux.1.running_var
 - aux.1.num_batches_tracked
 - aux.4.weight
 - aux.4.bias

Περιεχόμενο του checkpoint (state_dict):
Layer: layer0.0.weight | Shape: torch.Size([64, 3, 3, 3]) | Type: torch.float32
Layer: layer0.1.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.1.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.1.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.1.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer0.3.weight | Shape: torch.Size([64, 64, 3, 3]) | Type: torch.float32
Layer: layer0.4.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.4.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.4.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.4.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer0.4.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer0.6.weight | Shape: torch.Size([128, 64, 3, 3]) | Type: torch.float32
Layer: layer0.7.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer0.7.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer0.7.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer0.7.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer0.7.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.0.conv1.weight | Shape: torch.Size([64, 128, 1, 1]) | Type: torch.float32
Layer: layer1.0.bn1.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn1.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn1.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn1.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.0.conv2.weight | Shape: torch.Size([64, 64, 3, 3]) | Type: torch.float32
Layer: layer1.0.bn2.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn2.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn2.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn2.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.0.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.0.conv3.weight | Shape: torch.Size([256, 64, 1, 1]) | Type: torch.float32
Layer: layer1.0.bn3.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.bn3.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.bn3.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.bn3.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.0.downsample.0.weight | Shape: torch.Size([256, 128, 1, 1]) | Type: torch.float32
Layer: layer1.0.downsample.1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.downsample.1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.downsample.1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.downsample.1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.0.downsample.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.1.conv1.weight | Shape: torch.Size([64, 256, 1, 1]) | Type: torch.float32
Layer: layer1.1.bn1.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn1.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn1.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn1.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.1.conv2.weight | Shape: torch.Size([64, 64, 3, 3]) | Type: torch.float32
Layer: layer1.1.bn2.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn2.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn2.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn2.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.1.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.1.conv3.weight | Shape: torch.Size([256, 64, 1, 1]) | Type: torch.float32
Layer: layer1.1.bn3.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.1.bn3.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.1.bn3.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.1.bn3.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.1.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.2.conv1.weight | Shape: torch.Size([64, 256, 1, 1]) | Type: torch.float32
Layer: layer1.2.bn1.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn1.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn1.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn1.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.2.conv2.weight | Shape: torch.Size([64, 64, 3, 3]) | Type: torch.float32
Layer: layer1.2.bn2.weight | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn2.bias | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn2.running_mean | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn2.running_var | Shape: torch.Size([64]) | Type: torch.float32
Layer: layer1.2.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer1.2.conv3.weight | Shape: torch.Size([256, 64, 1, 1]) | Type: torch.float32
Layer: layer1.2.bn3.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.2.bn3.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.2.bn3.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.2.bn3.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer1.2.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.0.conv1.weight | Shape: torch.Size([128, 256, 1, 1]) | Type: torch.float32
Layer: layer2.0.bn1.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn1.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn1.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn1.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.0.conv2.weight | Shape: torch.Size([128, 128, 3, 3]) | Type: torch.float32
Layer: layer2.0.bn2.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn2.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn2.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn2.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.0.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.0.conv3.weight | Shape: torch.Size([512, 128, 1, 1]) | Type: torch.float32
Layer: layer2.0.bn3.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.bn3.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.bn3.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.bn3.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.0.downsample.0.weight | Shape: torch.Size([512, 256, 1, 1]) | Type: torch.float32
Layer: layer2.0.downsample.1.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.downsample.1.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.downsample.1.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.downsample.1.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.0.downsample.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.1.conv1.weight | Shape: torch.Size([128, 512, 1, 1]) | Type: torch.float32
Layer: layer2.1.bn1.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn1.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn1.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn1.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.1.conv2.weight | Shape: torch.Size([128, 128, 3, 3]) | Type: torch.float32
Layer: layer2.1.bn2.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn2.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn2.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn2.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.1.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.1.conv3.weight | Shape: torch.Size([512, 128, 1, 1]) | Type: torch.float32
Layer: layer2.1.bn3.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.1.bn3.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.1.bn3.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.1.bn3.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.1.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.2.conv1.weight | Shape: torch.Size([128, 512, 1, 1]) | Type: torch.float32
Layer: layer2.2.bn1.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn1.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn1.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn1.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.2.conv2.weight | Shape: torch.Size([128, 128, 3, 3]) | Type: torch.float32
Layer: layer2.2.bn2.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn2.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn2.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn2.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.2.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.2.conv3.weight | Shape: torch.Size([512, 128, 1, 1]) | Type: torch.float32
Layer: layer2.2.bn3.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.2.bn3.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.2.bn3.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.2.bn3.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.2.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.3.conv1.weight | Shape: torch.Size([128, 512, 1, 1]) | Type: torch.float32
Layer: layer2.3.bn1.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn1.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn1.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn1.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.3.conv2.weight | Shape: torch.Size([128, 128, 3, 3]) | Type: torch.float32
Layer: layer2.3.bn2.weight | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn2.bias | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn2.running_mean | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn2.running_var | Shape: torch.Size([128]) | Type: torch.float32
Layer: layer2.3.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer2.3.conv3.weight | Shape: torch.Size([512, 128, 1, 1]) | Type: torch.float32
Layer: layer2.3.bn3.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.3.bn3.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.3.bn3.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.3.bn3.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer2.3.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.0.conv1.weight | Shape: torch.Size([256, 512, 1, 1]) | Type: torch.float32
Layer: layer3.0.bn1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.0.conv2.weight | Shape: torch.Size([256, 256, 3, 3]) | Type: torch.float32
Layer: layer3.0.bn2.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn2.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn2.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn2.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.0.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.0.conv3.weight | Shape: torch.Size([1024, 256, 1, 1]) | Type: torch.float32
Layer: layer3.0.bn3.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.bn3.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.bn3.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.bn3.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.0.downsample.0.weight | Shape: torch.Size([1024, 512, 1, 1]) | Type: torch.float32
Layer: layer3.0.downsample.1.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.downsample.1.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.downsample.1.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.downsample.1.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.0.downsample.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.1.conv1.weight | Shape: torch.Size([256, 1024, 1, 1]) | Type: torch.float32
Layer: layer3.1.bn1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.1.conv2.weight | Shape: torch.Size([256, 256, 3, 3]) | Type: torch.float32
Layer: layer3.1.bn2.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn2.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn2.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn2.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.1.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.1.conv3.weight | Shape: torch.Size([1024, 256, 1, 1]) | Type: torch.float32
Layer: layer3.1.bn3.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.1.bn3.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.1.bn3.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.1.bn3.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.1.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.2.conv1.weight | Shape: torch.Size([256, 1024, 1, 1]) | Type: torch.float32
Layer: layer3.2.bn1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.2.conv2.weight | Shape: torch.Size([256, 256, 3, 3]) | Type: torch.float32
Layer: layer3.2.bn2.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn2.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn2.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn2.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.2.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.2.conv3.weight | Shape: torch.Size([1024, 256, 1, 1]) | Type: torch.float32
Layer: layer3.2.bn3.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.2.bn3.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.2.bn3.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.2.bn3.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.2.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.3.conv1.weight | Shape: torch.Size([256, 1024, 1, 1]) | Type: torch.float32
Layer: layer3.3.bn1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.3.conv2.weight | Shape: torch.Size([256, 256, 3, 3]) | Type: torch.float32
Layer: layer3.3.bn2.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn2.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn2.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn2.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.3.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.3.conv3.weight | Shape: torch.Size([1024, 256, 1, 1]) | Type: torch.float32
Layer: layer3.3.bn3.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.3.bn3.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.3.bn3.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.3.bn3.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.3.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.4.conv1.weight | Shape: torch.Size([256, 1024, 1, 1]) | Type: torch.float32
Layer: layer3.4.bn1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.4.conv2.weight | Shape: torch.Size([256, 256, 3, 3]) | Type: torch.float32
Layer: layer3.4.bn2.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn2.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn2.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn2.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.4.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.4.conv3.weight | Shape: torch.Size([1024, 256, 1, 1]) | Type: torch.float32
Layer: layer3.4.bn3.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.4.bn3.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.4.bn3.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.4.bn3.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.4.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.5.conv1.weight | Shape: torch.Size([256, 1024, 1, 1]) | Type: torch.float32
Layer: layer3.5.bn1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.5.conv2.weight | Shape: torch.Size([256, 256, 3, 3]) | Type: torch.float32
Layer: layer3.5.bn2.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn2.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn2.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn2.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: layer3.5.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer3.5.conv3.weight | Shape: torch.Size([1024, 256, 1, 1]) | Type: torch.float32
Layer: layer3.5.bn3.weight | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.5.bn3.bias | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.5.bn3.running_mean | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.5.bn3.running_var | Shape: torch.Size([1024]) | Type: torch.float32
Layer: layer3.5.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.0.conv1.weight | Shape: torch.Size([512, 1024, 1, 1]) | Type: torch.float32
Layer: layer4.0.bn1.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn1.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn1.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn1.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.0.conv2.weight | Shape: torch.Size([512, 512, 3, 3]) | Type: torch.float32
Layer: layer4.0.bn2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.0.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.0.conv3.weight | Shape: torch.Size([2048, 512, 1, 1]) | Type: torch.float32
Layer: layer4.0.bn3.weight | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.bn3.bias | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.bn3.running_mean | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.bn3.running_var | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.0.downsample.0.weight | Shape: torch.Size([2048, 1024, 1, 1]) | Type: torch.float32
Layer: layer4.0.downsample.1.weight | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.downsample.1.bias | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.downsample.1.running_mean | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.downsample.1.running_var | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.0.downsample.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.1.conv1.weight | Shape: torch.Size([512, 2048, 1, 1]) | Type: torch.float32
Layer: layer4.1.bn1.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn1.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn1.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn1.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.1.conv2.weight | Shape: torch.Size([512, 512, 3, 3]) | Type: torch.float32
Layer: layer4.1.bn2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.1.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.1.conv3.weight | Shape: torch.Size([2048, 512, 1, 1]) | Type: torch.float32
Layer: layer4.1.bn3.weight | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.1.bn3.bias | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.1.bn3.running_mean | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.1.bn3.running_var | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.1.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.2.conv1.weight | Shape: torch.Size([512, 2048, 1, 1]) | Type: torch.float32
Layer: layer4.2.bn1.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn1.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn1.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn1.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.2.conv2.weight | Shape: torch.Size([512, 512, 3, 3]) | Type: torch.float32
Layer: layer4.2.bn2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: layer4.2.bn2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: layer4.2.conv3.weight | Shape: torch.Size([2048, 512, 1, 1]) | Type: torch.float32
Layer: layer4.2.bn3.weight | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.2.bn3.bias | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.2.bn3.running_mean | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.2.bn3.running_var | Shape: torch.Size([2048]) | Type: torch.float32
Layer: layer4.2.bn3.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: ppm.features.0.1.weight | Shape: torch.Size([512, 2048, 1, 1]) | Type: torch.float32
Layer: ppm.features.0.2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.0.2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.0.2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.0.2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.0.2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: ppm.features.1.1.weight | Shape: torch.Size([512, 2048, 1, 1]) | Type: torch.float32
Layer: ppm.features.1.2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.1.2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.1.2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.1.2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.1.2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: ppm.features.2.1.weight | Shape: torch.Size([512, 2048, 1, 1]) | Type: torch.float32
Layer: ppm.features.2.2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.2.2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.2.2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.2.2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.2.2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: ppm.features.3.1.weight | Shape: torch.Size([512, 2048, 1, 1]) | Type: torch.float32
Layer: ppm.features.3.2.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.3.2.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.3.2.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.3.2.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: ppm.features.3.2.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: cls.0.weight | Shape: torch.Size([512, 4096, 3, 3]) | Type: torch.float32
Layer: cls.1.weight | Shape: torch.Size([512]) | Type: torch.float32
Layer: cls.1.bias | Shape: torch.Size([512]) | Type: torch.float32
Layer: cls.1.running_mean | Shape: torch.Size([512]) | Type: torch.float32
Layer: cls.1.running_var | Shape: torch.Size([512]) | Type: torch.float32
Layer: cls.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: cls.4.weight | Shape: torch.Size([35, 512, 1, 1]) | Type: torch.float32
Layer: cls.4.bias | Shape: torch.Size([35]) | Type: torch.float32
Layer: aux.0.weight | Shape: torch.Size([256, 1024, 3, 3]) | Type: torch.float32
Layer: aux.1.weight | Shape: torch.Size([256]) | Type: torch.float32
Layer: aux.1.bias | Shape: torch.Size([256]) | Type: torch.float32
Layer: aux.1.running_mean | Shape: torch.Size([256]) | Type: torch.float32
Layer: aux.1.running_var | Shape: torch.Size([256]) | Type: torch.float32
Layer: aux.1.num_batches_tracked | Shape: torch.Size([]) | Type: torch.int64
Layer: aux.4.weight | Shape: torch.Size([35, 256, 1, 1]) | Type: torch.float32
Layer: aux.4.bias | Shape: torch.Size([35]) | Type: torch.float32
